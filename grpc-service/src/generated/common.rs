// This file is @generated by prost-build.
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PageInfo {
    #[prost(uint64, tag = "1")]
    pub page: u64,
    #[prost(uint64, tag = "2")]
    pub page_size: u64,
    #[prost(uint64, tag = "3")]
    pub total_items: u64,
    #[prost(uint64, tag = "4")]
    pub total_pages: u64,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PageRequest {
    #[prost(uint64, tag = "1")]
    pub page: u64,
    #[prost(uint64, tag = "2")]
    pub page_size: u64,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Timeframe {
    Unspecified = 0,
    OneHour = 1,
    SixHour = 2,
    OneDay = 3,
    OneWeek = 4,
    OneMonth = 5,
    All = 6,
}
impl Timeframe {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "TIMEFRAME_UNSPECIFIED",
            Self::OneHour => "TIMEFRAME_ONE_HOUR",
            Self::SixHour => "TIMEFRAME_SIX_HOUR",
            Self::OneDay => "TIMEFRAME_ONE_DAY",
            Self::OneWeek => "TIMEFRAME_ONE_WEEK",
            Self::OneMonth => "TIMEFRAME_ONE_MONTH",
            Self::All => "TIMEFRAME_ALL",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "TIMEFRAME_UNSPECIFIED" => Some(Self::Unspecified),
            "TIMEFRAME_ONE_HOUR" => Some(Self::OneHour),
            "TIMEFRAME_SIX_HOUR" => Some(Self::SixHour),
            "TIMEFRAME_ONE_DAY" => Some(Self::OneDay),
            "TIMEFRAME_ONE_WEEK" => Some(Self::OneWeek),
            "TIMEFRAME_ONE_MONTH" => Some(Self::OneMonth),
            "TIMEFRAME_ALL" => Some(Self::All),
            _ => None,
        }
    }
}
