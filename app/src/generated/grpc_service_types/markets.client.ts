// @generated by protobuf-ts 2.10.0 with parameter generate_dependencies,long_type_number
// @generated from protobuf file "markets.proto" (package "markets", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MarketService } from "./markets";
import type { GetMarketTradesResponse } from "./markets";
import type { RequestWithMarketIdAndPageRequest } from "./markets";
import type { GetTopHoldersResponse } from "./markets";
import type { GetMarketBookResponse } from "./markets";
import type { RequestForMarketBook } from "./markets";
import type { GetMarketByIdResponse } from "./markets";
import type { RequestWithMarketId } from "./markets";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetPaginatedMarketResponse } from "./markets";
import type { PageRequest } from "./common";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service markets.MarketService
 */
export interface IMarketServiceClient {
    /**
     * @generated from protobuf rpc: GetMarketData(common.PageRequest) returns (markets.GetPaginatedMarketResponse);
     */
    getMarketData(input: PageRequest, options?: RpcOptions): UnaryCall<PageRequest, GetPaginatedMarketResponse>;
    /**
     * @generated from protobuf rpc: GetMarketById(markets.RequestWithMarketId) returns (markets.GetMarketByIdResponse);
     */
    getMarketById(input: RequestWithMarketId, options?: RpcOptions): UnaryCall<RequestWithMarketId, GetMarketByIdResponse>;
    /**
     * @generated from protobuf rpc: GetMarketBook(markets.RequestForMarketBook) returns (markets.GetMarketBookResponse);
     */
    getMarketBook(input: RequestForMarketBook, options?: RpcOptions): UnaryCall<RequestForMarketBook, GetMarketBookResponse>;
    /**
     * @generated from protobuf rpc: GetTopHolders(markets.RequestWithMarketId) returns (markets.GetTopHoldersResponse);
     */
    getTopHolders(input: RequestWithMarketId, options?: RpcOptions): UnaryCall<RequestWithMarketId, GetTopHoldersResponse>;
    /**
     * @generated from protobuf rpc: GetMarketTrades(markets.RequestWithMarketIdAndPageRequest) returns (markets.GetMarketTradesResponse);
     */
    getMarketTrades(input: RequestWithMarketIdAndPageRequest, options?: RpcOptions): UnaryCall<RequestWithMarketIdAndPageRequest, GetMarketTradesResponse>;
}
/**
 * @generated from protobuf service markets.MarketService
 */
export class MarketServiceClient implements IMarketServiceClient, ServiceInfo {
    typeName = MarketService.typeName;
    methods = MarketService.methods;
    options = MarketService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetMarketData(common.PageRequest) returns (markets.GetPaginatedMarketResponse);
     */
    getMarketData(input: PageRequest, options?: RpcOptions): UnaryCall<PageRequest, GetPaginatedMarketResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PageRequest, GetPaginatedMarketResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetMarketById(markets.RequestWithMarketId) returns (markets.GetMarketByIdResponse);
     */
    getMarketById(input: RequestWithMarketId, options?: RpcOptions): UnaryCall<RequestWithMarketId, GetMarketByIdResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<RequestWithMarketId, GetMarketByIdResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetMarketBook(markets.RequestForMarketBook) returns (markets.GetMarketBookResponse);
     */
    getMarketBook(input: RequestForMarketBook, options?: RpcOptions): UnaryCall<RequestForMarketBook, GetMarketBookResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<RequestForMarketBook, GetMarketBookResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetTopHolders(markets.RequestWithMarketId) returns (markets.GetTopHoldersResponse);
     */
    getTopHolders(input: RequestWithMarketId, options?: RpcOptions): UnaryCall<RequestWithMarketId, GetTopHoldersResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<RequestWithMarketId, GetTopHoldersResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetMarketTrades(markets.RequestWithMarketIdAndPageRequest) returns (markets.GetMarketTradesResponse);
     */
    getMarketTrades(input: RequestWithMarketIdAndPageRequest, options?: RpcOptions): UnaryCall<RequestWithMarketIdAndPageRequest, GetMarketTradesResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<RequestWithMarketIdAndPageRequest, GetMarketTradesResponse>("unary", this._transport, method, opt, input);
    }
}
